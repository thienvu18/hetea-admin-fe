{"version":3,"sources":["assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react.png","constants/constants.js","actions/actions.js","components/Login.js","pages/LoginPage.js","components/AdminNavbar.js","components/Sidebar.js","components/Header.js","pages/CreatePage.js","components/Create.js","components/UserInfoTable.js","components/UsersInfo.js","routes.js","pages/AdminPage.js","App.js","reducers/Login.reducer.js","reducers/Users.reducer.js","reducers/Reducer.js","serviceWorker.js","index.js"],"names":["module","exports","stringConnect","axios","require","LoginRequest","username","password","dispatch","string","console","log","encodedString","btoa","post","types","access_token","headers","Authorization","catch","error","OnclickLogin","then","res","type","data","Login","GetUsersInfoRequest","token","get","OnclickGetUsersInfo","GetUsersInfo","err","st","this","props","to","Col","lg","md","style","marginTop","Card","className","CardBody","Form","role","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","event","target","value","color","id","htmlFor","Button","onClick","preventDefault","Row","xs","href","e","React","Component","withRouter","LoginPage","connect","state","LoginState","LoginReducer","actions","AdminNavbar","Navbar","expand","Container","fluid","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","DropdownMenu","right","DropdownItem","header","tag","Link","divider","Sidebar","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","NavItem","NavLink","layout","path","NavLinkRRD","activeClassName","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","NavbarBrand","imgAlt","imgSrc","aria-labelledby","Collapse","isOpen","aria-label","defaultProps","Header","Create","xl","CardHeader","defaultValue","marginBottom","size","UsersInfoTable","columns","title","field","render","pictures","height","borderRadius","picture","UserCookie","cookie","load","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","onRowDelete","splice","UsersInfo","UsersReducer","usersInfo","UserInfoTable","margin","component","CreatePage","Admin","getRoutes","getBrandText","i","length","ref","App","AdminPage","from","initialState","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","action","user","image","UsersInfoReducer","myReducer","combineReducers","Boolean","window","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3f65535.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.23007132.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","export const stringConnect = 'https://hetea-admin.herokuapp.com';\n// export const stringConnect = 'http://localhost:3000';\n\nexport const login = 'LOGIN';\n\nexport const getUsersInfo = 'GET_USERS_INFO';\n","import * as types from '../constants/constants';\n\nconst axios = require('axios');\n\n//=============================================================login=====================================================================\nfunction OnclickLogin(username, password) {\n  var string = username + ':' + password; \n  console.log(string);\n  var encodedString = btoa(string);\n  const res = axios\n    .post(\n      `${types.stringConnect}/auth`,\n      {\n        access_token: 'DmPHDlGyAx3dzzx7Hsqbj3olNiwWWBUe'\n      },\n      {\n        headers: { Authorization: `Basic ${encodedString}`  }\n      }\n    )\n    .catch(error => {\n      return error;\n    });\n  return res;\n}\n\nexport const Login = (username, password, res) => {\n  return {\n    type: types.login,\n    data: { username, password, res }\n  };\n};\n\nexport const LoginRequest = (username, password) => {\n  return dispatch => {\n    return OnclickLogin(username, password).then(res => {\n      dispatch(Login(username, password, res));\n    });\n  };\n};\n\n//=========================================================get users info==================================================================\nfunction OnclickGetUsersInfo(token) {\n\n  const res = axios\n    .get(`${types.stringConnect}/users`, {\n      headers: { Authorization: `bearer ${token}` }\n    })\n    .catch(error => {\n      return error;\n    });\n  return res;\n}\n\nexport const GetUsersInfo = (token, res) => {\n  console.log(\"res\",res);\n  return {\n    type: types.getUsersInfo,\n    data: { token, res }\n  };\n};\n\nexport const GetUsersInfoRequest = (token) => {\n  return dispatch => {\n    return OnclickGetUsersInfo(token).then(res => {\n      dispatch(GetUsersInfo(token, res));\n    });\n  };\n};\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from 'reactstrap';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.username = '';\n    this.password = '';\n    this.err = '';\n  }\n\n  render() {\n    const st = this.props;\n    if (this.props.token !== '' && this.props.token !== 'err') {\n      return <Redirect to=\"/admin\"></Redirect>;\n    }\n    if (this.props.token === 'err') {\n      this.err=\"Invalid username or password\"\n    }\n    return (\n      <center>\n        <Col lg=\"5\" md=\"7\" style={{ marginTop: '100px' }}>\n          <Card className=\"bg-secondary shadow border-1\">\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">SIGN IN</div>\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      onChange={event => {\n                        this.username = event.target.value;\n                      }}\n                    />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      onChange={event => {\n                        this.password = event.target.value;\n                      }}\n                    />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <div style={{color: \"red\"}}>{this.err}</div>\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    onClick={event => {\n                      event.preventDefault();\n                      st.Login(this.username, this.password);\n                    }}\n                    type=\"button\"\n                  >\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n              <Row className=\"mt-3\">\n                <Col xs=\"6\">\n                  <a\n                    className=\" text-muted\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                    <small>Forgot password?</small>\n                  </a>\n                </Col>\n                <Col className=\"text-right\" xs=\"6\">\n                  <a\n                    className=\" text-muted\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                    <small>Create new account</small>\n                  </a>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </center>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import { connect } from 'react-redux';\nimport * as actions from '../actions/actions';\nimport Login from '../components/Login';\n\nconst mapStateToProps = state => {\n  const LoginState = state.LoginReducer;\n  return {\n    username: LoginState.username,\n    password: LoginState.password,\n    token: LoginState.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Login: (username, password) => {\n      dispatch(actions.LoginRequest(username, password));\n    }\n  };\n};\nconst LoginPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"../assets/img/theme/team-4-800x800.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Jessica Jones\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"../assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            <h6 className=\"navbar-heading text-muted\">Documentation</h6>\n            {/* Navigation */}\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/colors?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-palette\" />\n                  Foundation\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/alerts?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-ui-04\" />\n                  Components\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\n// reactstrap components\nimport {Container } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import Create from '../components/Create';\n\nexport default Create;","import React from 'react';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n// core components\nimport Header from './Header';\nclass Create extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"12\">\n                      <h3 className=\"mb-0\">Create new admin</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <Row>\n                  <Col lg=\"8\">\n                    <CardBody>\n                      <Form>\n                        <h6 className=\"heading-small text-muted mb-4\">\n                          Admin information\n                        </h6>\n                        <div className=\"pl-lg-4\">\n                          <Row>\n                            <Col lg=\"6\">\n                              <FormGroup>\n                                <label\n                                  className=\"form-control-label\"\n                                  htmlFor=\"input-first-name\"\n                                >\n                                  First name\n                                </label>\n                                <Input\n                                  className=\"form-control-alternative\"\n                                  defaultValue=\"Lucky\"\n                                  id=\"input-first-name\"\n                                  placeholder=\"First name\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col lg=\"6\">\n                              <FormGroup>\n                                <label\n                                  className=\"form-control-label\"\n                                  htmlFor=\"input-last-name\"\n                                >\n                                  Last name\n                                </label>\n                                <Input\n                                  className=\"form-control-alternative\"\n                                  defaultValue=\"Jesse\"\n                                  id=\"input-last-name\"\n                                  placeholder=\"Last name\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col lg=\"6\">\n                              <FormGroup>\n                                <label\n                                  className=\"form-control-label\"\n                                  htmlFor=\"input-email\"\n                                >\n                                  Email address\n                                </label>\n                                <Input\n                                  className=\"form-control-alternative\"\n                                  id=\"input-email\"\n                                  placeholder=\"jesse@example.com\"\n                                  type=\"email\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col lg=\"6\">\n                              <FormGroup>\n                                <label\n                                  className=\"form-control-label\"\n                                  htmlFor=\"input-username\"\n                                >\n                                  Password\n                                </label>\n                                <Input\n                                  className=\"form-control-alternative\"\n                                  defaultValue=\"lucky.jesse\"\n                                  id=\"input-username\"\n                                  placeholder=\"Username\"\n                                  type=\"password\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Form>\n                    </CardBody>\n                  </Col>\n                  <Col lg=\"4\">\n                    <Row className=\"justify-content-center\">\n                      <Col className=\"order-lg-2\" lg=\"3\">\n                        <div\n                          className=\"card-profile-image\"\n                          style={{ marginTop: '100px' }}\n                        >\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require('../assets/img/theme/team-4-800x800.jpg')}\n                            />\n                          </a>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col lg=\"8\" style={{ marginBottom: '20px' }}>\n                    <center>\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"m\"\n                      >\n                        Create\n                      </Button>\n                    </center>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Create;\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/actions';\nimport cookie from 'react-cookies';\n\nconst mapStateToProps = state => {\n  const UsersState = state.UsersReducer;\n  return {\n    data: UsersState.usersInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    GetUsersInfo: (token) => {\n      dispatch(actions.GetUsersInfoRequest(token));\n    }\n  };\n};\n\nclass UsersInfoTable extends React.Component {\n  constructor() {\n    super();\n    this.columns = [\n      {\n        title: 'Avatar',\n        field: 'picture',\n        render: pictures => (\n          <img\n            style={{ height: 45, borderRadius: '50%' }}\n            src={pictures.picture}\n            alt=\"\"\n          />\n        ),\n      },\n      { title: 'Name', field: 'name' },\n      { title: 'Email', field: 'email' },\n      {\n        title: 'Type',\n        field: 'Type'\n      }\n    ];\n  }\n  \n  componentDidMount() {\n    const UserCookie = cookie.load('token');\n    this.props.GetUsersInfo(UserCookie);\n  }\n\n  render() {\n    const st = this.props;\n    // const UserCookie = cookie.load('token');\n    // st.GetUsersInfo(UserCookie);\n    return (\n      <MaterialTable\n        title=\"User Infomation List\"\n        columns={this.columns}\n        data={st.data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  this.setState(prevState => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            })\n        }}\n      />\n    );\n  }\n}\n\nconst UsersInfo = connect(mapStateToProps, mapDispatchToProps)(UsersInfoTable);\n\nexport default UsersInfo;\n","import React from 'react';\nimport UserInfoTable from './UserInfoTable';\n\n// reactstrap components\nimport { Card, Container, Row, Col } from 'reactstrap';\n// core components\nimport Header from './Header';\nclass UsersInfo extends React.Component {\n  render() {\n    return (\n      <div>\n        <>\n          <Header />\n          {/* Page content */}\n          <Container className=\"mt--7\" fluid>\n            <Row>\n              <Col className=\"order-xl-1\" xl=\"12\">\n                <Card className=\"bg-secondary shadow\">\n                  <UserInfoTable></UserInfoTable>\n                </Card>\n               </Col>\n            </Row>\n          </Container>\n        </>\n        <div style={{ margin: '100px' }}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UsersInfo;\n","import LoginPage from './pages/LoginPage';\nimport CreatePage from './pages/CreatePage'; \nimport UserInfoPage from './pages/UserInfoPage';\n\nvar routes = [\n  {\n    path: '/index',\n    name: 'Dashboard',\n    icon: 'ni ni-tv-2 text-primary',\n    component: CreatePage,\n    layout: '/admin'\n  },\n  {\n    path: '/icons',\n    name: 'Icons',\n    icon: 'ni ni-planet text-blue',\n    component: LoginPage,\n    layout: '/admin'\n  },\n  {\n    path: '/maps',\n    name: 'Maps',\n    icon: 'ni ni-pin-3 text-orange',\n    component: LoginPage,\n    layout: '/admin'\n  },\n  {\n    path: '/Create',\n    name: 'Create admin',\n    icon: 'ni ni-single-02 text-yellow',\n    component: CreatePage,\n    layout: '/admin'\n  },\n  {\n    path: '/UserInfo',\n    name: 'User Infomation',\n    icon: 'ni ni-bullet-list-67 text-red',\n    component: UserInfoPage,\n    layout: '/admin'\n  },\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AdminNavbar from \"../components/AdminNavbar\";\nimport Sidebar from \"../components/Sidebar\";\n\nimport routes from \"../routes\";\n\nclass Admin extends React.Component {\n  // componentDidUpdate(e) {\n  //   document.documentElement.scrollTop = 0;\n  //   document.scrollingElement.scrollTop = 0;\n  //   this.refs.mainContent.scrollTop = 0;\n  // }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"../assets/img/brand/argon-react.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\n// import logo from './logo.svg';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport './assets/vendor/nucleo/css/nucleo.css';\nimport './assets/vendor/@fortawesome/fontawesome-free/css/all.min.css';\nimport './assets/scss/argon-dashboard-react.scss';\nimport Login from './pages/LoginPage';\nimport AdminPage from './pages/AdminPage';\n// import Login from './components/UserInfoTable';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/admin\" component={AdminPage}></Route>\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as types from '../constants/constants';\n\nconst initialState = {\n  token:'',\n  username: '',\n  password: '',\n  id: '',\n  name: '',\n  picture: ''\n};\n\nfunction setCookie(cname, cvalue, exdays) {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  const expires = `expires=${d.toUTCString()}`;\n  document.cookie = `${cname}=${cvalue};${expires};path=/`;\n}\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.login: {\n      const st = { ...state };\n      st.username = action.data.username;\n      st.password = action.data.password;\n      try {\n        st.id = action.data.res.data.user.id;\n        st.token = action.data.res.data.token;\n        st.name = action.data.res.data.user.name;\n        st.image = action.data.res.data.user.picture;\n        setCookie('token', action.data.res.data.token, 7);\n      } catch (err) {\n        st.token = 'err';\n      }\n      console.log(\"state\", st);\n      return st;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default LoginReducer;\n","import * as types from '../constants/constants';\n\nconst initialState = {\n  usersInfo:[]\n};\n\n\nconst UsersInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.getUsersInfo: {\n      const st = { ...state };\n      try {\n          st.usersInfo = action.data.res.data;\n          console.log(\"user\",st.usersInfo);\n      } catch (err) {\n        st.token = 'err';\n      }\n      console.log(\"state user\", st);\n      return st;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default UsersInfoReducer;\n","import { combineReducers } from 'redux';\nimport LoginReducer from './Login.reducer';\nimport UsersReducer from './Users.reducer';\n\nconst myReducer = combineReducers({\n  LoginReducer,\n  UsersReducer: UsersReducer\n});\nexport default myReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\nimport React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport { CookiesProvider } from 'react-cookie';\nimport myReducer from './reducers/Reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(myReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}